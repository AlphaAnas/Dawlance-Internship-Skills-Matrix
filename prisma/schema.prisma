generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
}


model Department {
  id        BigInt      @id @default(autoincrement())
  name      String      @db.VarChar(100)
  employees Employee[]
  machines  Machine[]
  skillHistories SkillHistory[]
  exportLogs ExportLog[]
}

model Employee {
  id        BigInt           @id @default(autoincrement())
  display_id String          @unique @db.VarChar(50)
  name      String           @db.VarChar(100)
  gender    Gender
  current_department_id BigInt
  department Department      @relation(fields: [current_department_id], references: [id])
  skills    EmployeeSkill[]
  skillHistories SkillHistory[]
}

model Machine {
  id        BigInt      @id @default(autoincrement())
  name      String      @db.VarChar(100)
  department_id BigInt
  department Department @relation(fields: [department_id], references: [id])
  is_critical Boolean?
  female_allowed Boolean
  machineSkills MachineSkill[]
  skillHistories SkillHistory[]
}

model Skill {
  id     BigInt          @id @default(autoincrement())
  name   String          @db.VarChar(100)
  category String        @db.VarChar(100)
  machineSkills MachineSkill[]
  employeeSkills EmployeeSkill[]
  skillHistories SkillHistory[]
}

model MachineSkill {
  id         BigInt  @id @default(autoincrement())
  skill_id   BigInt
  machine_id BigInt
  skill      Skill   @relation(fields: [skill_id], references: [id])
  machine    Machine @relation(fields: [machine_id], references: [id])
}

model EmployeeSkill {
  id            BigInt   @id @default(autoincrement())
  employee_id   BigInt
  skill_id      BigInt
  skill_level   Int
  assigned_date DateTime @default(now())
  employee      Employee @relation(fields: [employee_id], references: [id])
  skill         Skill    @relation(fields: [skill_id], references: [id])
}

model SkillHistory {
  id           BigInt   @id @default(autoincrement())
  employee_id  BigInt
  skill_id     BigInt
  department_id BigInt
  machine_id   BigInt?
  skill_level  Int
  start_date   DateTime
  end_date     DateTime?

  employee   Employee  @relation(fields: [employee_id], references: [id])
  skill      Skill     @relation(fields: [skill_id], references: [id])
  department Department @relation(fields: [department_id], references: [id])
  machine    Machine?  @relation(fields: [machine_id], references: [id])
}

model Manager {
  id    BigInt  @id @default(autoincrement())
  name  String  @db.VarChar(100)
  email String  @db.VarChar(100)
  exportLogs ExportLog[]
}

model ExportLog {
  id             BigInt   @id @default(autoincrement())
  manager_id     BigInt
  department_id  BigInt
  export_time    DateTime @default(now())
  export_type    String?  @db.VarChar(100)

  manager        Manager   @relation(fields: [manager_id], references: [id])
  department     Department @relation(fields: [department_id], references: [id])
}
